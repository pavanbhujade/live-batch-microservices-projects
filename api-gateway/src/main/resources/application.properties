spring.application.name=api-gateway
server.port=9095

#API Gateway configuration #One way
#spring.cloud.gateway.discovery.locator.enabled=true


##Second way
#spring.cloud.gateway.routes[0].id=food-service
#spring.cloud.gateway.routes[0].uri=lb://food-service
#spring.cloud.gateway.routes[0].predicates[0]=Path=/foods/**
#spring.cloud.gateway.routes[0].filters[0]=RewritePath=/foods/?(?<remaining>.*) , /$\{remaining}
#spring.cloud.gateway.routes[0].filters[0].CircuitBreaker=myCircuitBreaker
#
#spring.cloud.gateway.routes[1].id=restaurant-service
#spring.cloud.gateway.routes[1].uri=lb://restaurant-service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/restaurants/**
#spring.cloud.gateway.routes[1].filters[0]=RewritePath=/restaurants/?(?<remaining>.*) , /$\{remaining}

#3rd way using Java Configurations
#Check GatewayConfig class
#@Bean
#public RouteLocator customRouteLocator(RouteLocatorBuilder routeLocatorBuilder) {
#    return routeLocatorBuilder
#           .routes()



#Eureka client configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.gateway.access=read_only
management.endpoint.gateway.enable=true
management.info.env.enabled=true

info.app.name=Api Gateway
info.app.description=This is a API Gateway for common entry point for all our microservices
info.app.author=Pavan Bhujade
info.app.email=pavanbhujade123@gmail.com
info.app.version=1.0V

#Circuit Breaker configuration
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10000

# Connection timeout configuration
spring.cloud.gateway.httpclient.connect-timeout=1000
spring.cloud.gateway.httpclient.response-timeout=5s


