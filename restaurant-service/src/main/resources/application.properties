spring.application.name=restaurant-service
server.port=9091

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/restaurantdb
spring.datasource.username=postgres
spring.datasource.password=PostgresSql@123


# JPA/Hibernate Configuration (Optional)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


#Eureka client configuration
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#Spring cloud bus rabbit MQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#Actuator endpoints
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

info.app.name=restaurant-service
info.app.description=This is restaurant-service. We are developing the service.
info.app.version=1.0 Dev

#RateLimiter configuration using Resilience4j
resilience4j.ratelimiter.configs.default.limit-refresh-period=5s
resilience4j.ratelimiter.configs.default.limit-for-period=1

